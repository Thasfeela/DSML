from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_digits

a=load_digits()
X = a.data
y = a.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3)
knn = KNeighborsClassifier(n_neighbors=6)
knn.fit(X_train, y_train)
KNeighborsClassifier(n_neighbors=6)
 
p=(knn.predict(X_test))
print(p)

--------Output--------

[9 3 6 7 7 3 9 8 9 3 3 9 6 2 3 4 3 1 3 7 1 5 0 8 7 5 8 6 3 2 3 7 5 2 4 3 5
 9 1 3 2 6 0 2 2 7 1 5 3 2 9 7 4 1 0 1 4 4 3 2 9 7 6 2 0 2 8 2 1 4 0 9 0 1
 4 9 3 4 3 0 6 3 0 4 3 1 8 4 6 5 8 8 7 5 0 7 6 3 6 1 4 9 8 4 5 3 1 2 0 3 7
 1 2 5 4 0 7 0 0 5 0 7 6 0 9 8 0 6 2 3 9 9 1 0 4 6 6 3 9 0 8 3 3 5 7 2 1 0
 4 3 6 3 2 8 7 6 5 0 4 8 5 3 3 1 5 8 5 8 1 3 6 5 8 5 0 8 6 8 7 8 1 4 1 4 0
 8 5 4 8 2 6 3 9 1 7 0 2 8 2 5 0 9 9 5 3 4 4 8 5 5 6 7 8 6 6 4 2 7 9 7 0 7
 3 6 1 2 1 4 8 2 4 5 5 3 5 1 9 9 9 7 2 1 0 8 3 7 5 8 3 2 9 4 1 7 2 2 1 7 8
 8 0 5 1 9 0 1 6 4 9 0 3 4 3 6 3 0 4 7 4 9 9 1 0 3 6 6 6 0 8 6 5 9 9 5 6 2
 6 6 0 1 7 5 5 2 0 0 9 5 9 0 9 0 7 2 3 4 7 3 8 1 9 6 4 1 4 7 9 9 0 0 2 4 1
 6 0 9 6 4 2 1 0 0 0 2 1 1 1 5 8 4 7 9 2 6 3 7 6 2 1 9 1 2 9 1 1 8 6 6 9 1
 9 0 1 5 2 3 5 7 6 3 0 3 3 8 1 9 6 4 1 5 0 0 1 4 8 3 7 1 6 0 7 5 9 8 6 6 9
 0 7 8 7 2 8 9 6 9 0 4 0 0 6 2 5 7 8 4 9 4 7 8 4 3 3 1 7 5 9 1 4 0 5 9 7 2
 9 5 8 6 6 5 8 0 9 7 7 2 4 9 2 9 0 1 1 4 9 7 5 2 5 6 3 1 9 8 7 2 5 3 7 9 8
 6 6 9 3 5 3 3 6 9 4 9 9 5 4 2 6 6 4 4 3 5 3 1 2 9 9 2 0 9 6 5 3 9 7 8 3 0
 7 2 9 4 5 8 6 2 1 4 3 5 4 7 7 6 7 7 1 6 4 5]


from sklearn.metrics import classification_report,confusion_matrix
print(confusion_matrix(y_test,p))
print(classification_report(y_test,p))

-------------Output--------------

[[57  0  0  0  0  0  0  0  0  0]
 [ 0 48  0  0  0  0  0  0  0  0]
 [ 0  2 48  0  0  0  0  0  1  0]
 [ 0  0  0 58  0  0  0  0  0  0]
 [ 0  0  0  0 52  0  0  1  0  0]
 [ 0  0  0  0  0 51  1  0  0  0]
 [ 0  0  0  0  0  0 56  0  1  0]
 [ 0  0  0  0  0  0  0 51  0  0]
 [ 0  4  0  0  0  0  0  0 41  0]
 [ 0  0  0  1  0  1  0  0  2 64]]
              precision    recall  f1-score   support

           0       1.00      1.00      1.00        57
           1       0.89      1.00      0.94        48
           2       1.00      0.94      0.97        51
           3       0.98      1.00      0.99        58
           4       1.00      0.98      0.99        53
           5       0.98      0.98      0.98        52
           6       0.98      0.98      0.98        57
           7       0.98      1.00      0.99        51
           8       0.91      0.91      0.91        45
           9       1.00      0.94      0.97        68

    accuracy                           0.97       540
   macro avg       0.97      0.97      0.97       540
weighted avg       0.98      0.97      0.97       540
